package com.deltaairlines.controller;import com.deltaairlines.dto.PaymentRequest;import com.deltaairlines.dto.PaymentsRequests;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.kafka.core.KafkaTemplate;import org.springframework.web.bind.annotation.*;import java.util.Date;import java.util.UUID;@RestControllerpublic class ProducerController {    @Value("${kafka.producer.topic.name}")    private String topicName;    @Autowired    private KafkaTemplate<String, Object> kafkaTemplate;    @GetMapping("/publish/{message}")    public void sendMessage(@PathVariable String message){        kafkaTemplate.send(topicName, message);    }    @PostMapping("/payment/pay")    public String doPayment(@RequestBody PaymentsRequests<PaymentRequest> payment){        PaymentRequest newPayment = payment.getPayload();        newPayment.setTransactionId(UUID.randomUUID().toString());        newPayment.setTxDate(new Date());        kafkaTemplate.send(topicName, newPayment);        return "Payment was not sucessfully!....";    }}